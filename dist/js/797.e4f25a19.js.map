{"version":3,"file":"js/797.e4f25a19.js","mappings":"0KAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,eAAeA,EAAG,MAAM,CAACE,YAAY,+BAA+B,CAACF,EAAG,MAAM,CAACE,YAAY,qCAAqC,CAACF,EAAG,MAAM,CAACE,YAAY,qDAAqD,CAACF,EAAG,MAAM,CAACE,YAAY,oBAAoB,CAACF,EAAG,cAAc,CAACG,MAAM,CAAC,GAAM,OAAML,EAAIM,WAAW,CAACJ,EAAG,MAAM,CAACE,YAAY,kCAAkCC,MAAM,CAAC,IAAML,EAAIO,iBAAiB,GAAGL,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,KAAK,CAACA,EAAG,cAAc,CAACG,MAAM,CAAC,GAAM,OAAML,EAAIM,WAAW,CAACN,EAAIQ,GAAGR,EAAIS,GAAGT,EAAIU,UAAU,WAAW,KAAKR,EAAG,MAAMA,EAAG,cAAc,CAACG,MAAM,CAAC,GAAM,OAAML,EAAIM,WAAW,CAACJ,EAAG,KAAK,CAACE,YAAY,mBAAmB,CAACF,EAAG,IAAI,CAACE,YAAY,0BAA0BJ,EAAIQ,GAAG,SAASR,EAAIS,GAAGT,EAAIW,YAAY,WAAW,QAAQ,IAC13B,EACGC,EAAkB,G,kBCiCtB,GACAC,KAAAA,SACAC,OACA,OACAJ,SAAAA,GACAH,WAAAA,GACAQ,SAAAA,GACAJ,WAAAA,GACAL,OAAAA,EAEA,EACAU,UACA,wCACA,EACAC,SAAAA,KACA,SACA,UAGAC,iBAAAA,EAAAA,EAAAA,GACAC,GAAAA,IAEAC,EAAAA,gBAAAA,EAAAA,OAAAA,GAEA,EACAC,MAAAA,CACA,UAEA,8BACA,GAEAC,QAAAA,CACAC,gBAAAA,GAKA,iBACA,cAEA,MACA,OACAC,QAAAA,SAEAC,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,MAAAA,IACA,2BACA,+BACA,mCACA,0CAEA,UACAC,EAAAA,EAAAA,IAAAA,GAAAA,MAAAA,IACA,sBACA,0BACA,8BACA,qCAyBA,ICnH+P,I,UCQ3PC,GAAY,OACd,EACA5B,EACAa,GACA,EACA,KACA,WACA,MAIF,EAAee,EAAiB,O","sources":["webpack://vuejs-essential/./src/views/articles/Column.vue","webpack://vuejs-essential/src/views/articles/Column.vue","webpack://vuejs-essential/./src/views/articles/Column.vue?94e0","webpack://vuejs-essential/./src/views/articles/Column.vue?ce7d"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"blog-container\"},[_c('div',{staticClass:\"blog-pages\"},[_c('router-view'),_c('div',{staticClass:\"col-md-3 main-col pull-left\"},[_c('div',{staticClass:\"panel panel-default corner-radius\"},[_c('div',{staticClass:\"panel-body text-center topic-author-box blog-info\"},[_c('div',{staticClass:\"image blog-cover\"},[_c('router-link',{attrs:{\"to\":`/my/${_vm.userId}`}},[_c('img',{staticClass:\"avatar-112 avatar img-thumbnail\",attrs:{\"src\":_vm.userAvatar}})])],1),_c('div',{staticClass:\"blog-name\"},[_c('h4',[_c('router-link',{attrs:{\"to\":`/my/${_vm.userId}`}},[_vm._v(_vm._s(_vm.userName)+\" 的专栏\")])],1)]),_c('hr'),_c('router-link',{attrs:{\"to\":`/my/${_vm.userId}`}},[_c('li',{staticClass:\"list-group-item\"},[_c('i',{staticClass:\"text-md fa fa-list-ul\"}),_vm._v(\" 专栏文章（\"+_vm._s(_vm.articleNum)+\"） \")])])],1)])])],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"blog-container\">\n        <div class=\"blog-pages\">\n            <!-- 用于渲染『文章列表』和『文章内容』 -->\n            <router-view/>\n\n            <div class=\"col-md-3 main-col pull-left\">\n                <div class=\"panel panel-default corner-radius\">\n                    <div class=\"panel-body text-center topic-author-box blog-info\">\n                        <div class=\"image blog-cover\">\n                            <router-link :to=\"`/my/${userId}`\">\n                                <img :src=\"userAvatar\" class=\"avatar-112 avatar img-thumbnail\">\n                            </router-link>\n                        </div>\n                        <div class=\"blog-name\">\n                            <h4>\n                                <router-link :to=\"`/my/${userId}`\">{{ userName }} 的专栏</router-link>\n                            </h4>\n                        </div>\n                        <hr>\n                        <router-link :to=\"`/my/${userId}`\">\n                            <li class=\"list-group-item\"><i class=\"text-md fa fa-list-ul\"></i> 专栏文章（{{ articleNum }}）\n                            </li>\n                        </router-link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {mapState} from 'vuex'\n    import {getTopic, getUser} from '@/api/topic.js'\n\n    export default {\n        name: 'Column',\n        data() {\n            return {\n                userName: '', //  对应用户姓名\n                userAvatar: '', //  对应用户头像\n                articles: [], //  对应用户文章\n                articleNum: '', // 对应的文章数量\n                userId: 0\n            }\n        },\n        created() {\n            this.userId = this.$route.params.userId || 0\n        },\n        computed: {\n            ...mapState([\n                'user'\n            ]),\n        },\n        beforeRouteEnter(to, from, next) {\n            next(vm => {\n                // 确认渲染该组件的对应路由时，通过 to.params 参数设置用户和文章数据\n                vm.setDataByParams(to.params)\n            })\n        },\n        watch: {\n            '$route'(to) {\n                // 在子页面之间相互切换时，通过 to.params 参数设置用户和文章数据\n                this.setDataByParams(to.params)\n            }\n        },\n        methods: {\n            setDataByParams(params) {\n                // const user = params.user\n                // // 当前文章\n                // const article = this.$store.getters.getArticleById(articleId)\n\n                const userId = params.userId\n                const articleId = params.articleId\n\n                if (articleId) {\n                    let params = {\n                        include: 'user'\n                    }\n                    getTopic(articleId, params).then((res) => {\n                        this.userId = res.data.user.id\n                        this.userName = res.data.user.name\n                        this.userAvatar = res.data.user.avatar\n                        this.articleNum = res.data.user.count_topic\n                    })\n                } else if (userId) {\n                    getUser(userId).then((res) => {\n                        this.userId = res.data.id\n                        this.userName = res.data.name\n                        this.userAvatar = res.data.avatar\n                        this.articleNum = res.data.count_topic\n                    })\n                }\n\n                // 存在当前文章时，设置用户数据为当前文章的用户信息，并使用文章的 uname 获取对应用户文章\n                // if (article) {\n                //     this.userName = article.uname\n                //     this.userAvatar = article.uavatar\n                //     this.articles = this.$store.getters.getArticlesByUid(null, article.uname)\n                // } else if (user) {\n                //     // 存在 user 参数时，使用路由的 user 获取对应用户文章\n                //     const articles = this.$store.getters.getArticlesByUid(null, user)\n                //\n                //     // 存在至少一篇用户文章时，设置用户数据为第一篇文章的用户信息\n                //     if (articles.length) {\n                //         this.userName = articles[0].uname\n                //         this.userAvatar = articles[0].uavatar\n                //     } else if (this.user) {\n                //         // 不存在用户文章时，设置用户数据为当前用户的用户信息\n                //         this.userName = this.user.name\n                //         this.userAvatar = this.user.avatar\n                //     }\n                //\n                //     this.articles = articles\n                // }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .blog-container {\n        margin-top: 20px;\n    }\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Column.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Column.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Column.vue?vue&type=template&id=6a2359a9&scoped=true&\"\nimport script from \"./Column.vue?vue&type=script&lang=js&\"\nexport * from \"./Column.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Column.vue?vue&type=style&index=0&id=6a2359a9&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6a2359a9\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","userId","userAvatar","_v","_s","userName","articleNum","staticRenderFns","name","data","articles","created","computed","beforeRouteEnter","next","vm","watch","methods","setDataByParams","include","getTopic","getUser","component"],"sourceRoot":""}